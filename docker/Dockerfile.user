FROM golang:1.22.3 AS builder

WORKDIR /app

# Install goose
RUN CGO_ENABLED=0 GOOS=linux go install -ldflags '-extldflags "-static"' github.com/pressly/goose/v3/cmd/goose@v3.21.1

# Cache dependencies
COPY go.mod go.sum ./
RUN go mod download

# Copy the source code and build the binary
COPY cmd ./cmd
COPY domain ./domain
COPY internal ./internal
COPY services ./services
RUN CGO_ENABLED=0 GOOS=linux go build -ldflags="-s -w" -o user_service ./cmd/user_service

# Use a minimal base image for the final stage
FROM alpine:3.20.1

WORKDIR /app
COPY --from=builder /app/user_service /app/

# Copy goose binary from builder
COPY --from=builder /go/bin/goose /usr/local/bin/

# Copy the migrations directory
COPY migrations /migrations

COPY docker/migration.sh /usr/local/bin/
RUN chmod +x /usr/local/bin/migration.sh

CMD ["/bin/sh", "-c", "/usr/local/bin/migration.sh && ./user_service"]