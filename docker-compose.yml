services:
  auth:
    build:
      context: .
      dockerfile: docker/Dockerfile.auth
    environment:
      - EXAMPLE_VAR=5
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_HOST=postgres
      - POSTGRES_PORT=${POSTGRES_PORT}
    networks:
      - messenger-network
    depends_on:
      - postgres

  user:
    build:
      context: .
      dockerfile: docker/Dockerfile.user
    environment:
      - EXAMPLE_VAR=5
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_HOST=postgres
      - POSTGRES_PORT=${POSTGRES_PORT}
    networks:
      - messenger-network
    depends_on:
      - postgres
  
  message:
    build:
      context: .
      dockerfile: docker/Dockerfile.message
    environment:
      - EXAMPLE_VAR=5
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_HOST=postgres
      - POSTGRES_PORT=${POSTGRES_PORT}
    networks:
      - messenger-network
    depends_on:
      - postgres

  caddy:
    image: caddy:latest
    ports:
      - "8080:8080"
    volumes:
      - ./Caddyfile:/etc/caddy/Caddyfile
    networks:
      - messenger-network
    depends_on:
      - auth
      - user

  postgres:
    image: postgres:latest
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    ports:
      - "5432:${POSTGRES_PORT}"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./migrations/init-db.sql.template:/docker-entrypoint-initdb.d/init-db.sql.template
    networks:
      - messenger-network

networks:
  messenger-network:
    driver: bridge

volumes:
  postgres_data:
    driver: local
